server:
  port: 8080

spring:
  quartz:
    job-store-type: jdbc
    jdbc:
      initialize-schema: never
    properties:
      org.quartz.threadPool.threadCount: 5
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka:9092
          autoCreateTopics: false
          autoAddPartitions: false
        bindings:
          domain-in:
            consumer:
              enableDlq: true
              dlqName: error
              autoCommitOnError: true
              autoCommitOffset: true
          cqrs-in:
            consumer:
              enableDlq: true
              dlqName: error
              autoCommitOnError: true
              autoCommitOffset: true
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        cqrs-in:
          group: vehicle-service
          destination: cqrs
          contentType: application/json
          consumer:
            maxAttempts: 1
            concurrency: 3
        cqrs-out:
          destination: cqrs
          contentType: application/json
        domain-in:
          group: vehicle-service
          destination: domain
          contentType: application/json
          consumer:
            maxAttempts: 1
            concurrency: 3
        domain-out:
          destination: domain
          contentType: application/json

naver:
  key: ${NAVER_KEY:my-naver-key}
  secret: ${NAVER_SECRET:my-naver-secret}
  url: https://naveropenapi.apigw.ntruss.com

---
server:
  port: 8093
spring:
  profiles: default
  datasource:
    url: jdbc:mysql://localhost:3307/mobility
    driverClassName: org.mariadb.jdbc.Driver
    username: root
    password: root
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka:9092
          autoCreateTopics: false
          autoAddPartitions: false
logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

service:
  endpoint:
    operation: ${SERVICE_ENDPOINT_OPERATION:http://localhost:8091}
    dispatch: ${SERVICE_ENDPOINT_DISPATCH:http://localhost:8092}
    vehicle: ${SERVICE_ENDPOINT_VEHICLE:http://localhost:8093}
---
spring:
  profiles: docker
  datasource:
    url: jdbc:mysql://localhost:3307/mobility
    driverClassName: org.mariadb.jdbc.Driver
    username: root
    password: root
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka:9092
          autoCreateTopics: false
          autoAddPartitions: false
service:
  endpoint:
    operation: ${SERVICE_ENDPOINT_OPERATION:http://localhost:8091}
    dispatch: ${SERVICE_ENDPOINT_DISPATCH:http://localhost:8092}
    vehicle: ${SERVICE_ENDPOINT_VEHICLE:http://localhost:8093}
